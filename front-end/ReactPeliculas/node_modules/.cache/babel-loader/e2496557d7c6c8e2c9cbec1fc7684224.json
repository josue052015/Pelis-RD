{"ast":null,"code":"var _jsxFileName = \"F:\\\\Pelis-RD\\\\front-end\\\\ReactPeliculas\\\\src\\\\cines\\\\FormularioCine.tsx\";\nimport { Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Formulario from \"../peliculas/utilidades/Formulario\";\nimport Boton from \"../peliculas/utilidades/Boton\";\nimport { Link } from \"react-router-dom\";\nimport FormularioMapa from \"../peliculas/utilidades/FormularioMapa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FormularioCine(props) {\n  var _this = this;\n\n  function transformarCoordenadas() {\n    //esto lo que hace es que si hay coordenadas dispobibles me las mostrara en el mapa, sino sera undefined\n    if (props.modelo.latitud && props.modelo.longitud) {\n      var respuesta = {\n        latitud: props.modelo.latitud,\n        longitud: props.modelo.longitud\n      };\n      return [respuesta];\n    }\n\n    return undefined;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.modelo,\n      onSubmit: props.onSubmit,\n      validationSchema: yup.object({\n        nombre: yup.string().required(\"Este campo es requerido\").PrimeraLetraMayuscula()\n      }),\n      children: function children(formikProps) {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Formulario, {\n            label: \"Nombre\",\n            campo: \"nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(FormularioMapa, {\n              campoLatitud: \"latitud\",\n              campoLongitud: \"longitud\",\n              coordenadas: transformarCoordenadas()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 30\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Boton, {\n            disabled: formikProps.isSubmitting,\n            type: \"submit\",\n            children: \"Guardar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn btn-secondary\",\n            to: \"/cines\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = FormularioCine;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioCine\");","map":{"version":3,"sources":["F:/Pelis-RD/front-end/ReactPeliculas/src/cines/FormularioCine.tsx"],"names":["Form","Formik","yup","Formulario","Boton","Link","FormularioMapa","FormularioCine","props","transformarCoordenadas","modelo","latitud","longitud","respuesta","undefined","onSubmit","object","nombre","string","required","PrimeraLetraMayuscula","formikProps","marginBottom","isSubmitting"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,QAA4C,QAA5C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,cAAP,MAA2B,wCAA3B;;;AAGA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAoD;AAAA;;AAE/D,WAASC,sBAAT,GAA+D;AAAE;AACjE,QAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,IAAwBH,KAAK,CAACE,MAAN,CAAaE,QAAxC,EAAiD;AAChD,UAAMC,SAAwB,GAAG;AAACF,QAAAA,OAAO,EAAEH,KAAK,CAACE,MAAN,CAAaC,OAAvB;AAAgCC,QAAAA,QAAQ,EAAEJ,KAAK,CAACE,MAAN,CAAaE;AAAvD,OAAjC;AACA,aAAM,CAACC,SAAD,CAAN;AACA;;AACD,WAAOC,SAAP;AACC;;AAED,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEN,KAAK,CAACE,MAA7B;AAAqC,MAAA,QAAQ,EAAEF,KAAK,CAACO,QAArD;AACI,MAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,CAAW;AACzBC,QAAAA,MAAM,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EAAiDC,qBAAjD;AADiB,OAAX,CADtB;AAAA,gBAKK,kBAACC,WAAD;AAAA,4BACG,QAAC,IAAD;AAAA,kCACI,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,QAAlB;AAA2B,YAAA,KAAK,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,mBADJ,eAGI;AAAK,YAAA,KAAK,EAAI;AAACC,cAAAA,YAAY,EAAE;AAAf,aAAd;AAAA,mCACK,QAAC,cAAD;AAAgB,cAAA,YAAY,EAAG,SAA/B;AAAyC,cAAA,aAAa,EAAC,UAAvD;AAAkE,cAAA,WAAW,EAAIb,sBAAsB;AAAvG;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAOI,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEY,WAAW,CAACE,YAA7B;AAA2C,YAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPJ,eAQI,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,mBAAhB;AAAoC,YAAA,EAAE,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBADH;AAAA;AALL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuBH;KAjCuBhB,c","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { creacionCinesDTO } from \"./cine.model\";\r\nimport * as yup from \"yup\"\r\nimport Formulario from \"../peliculas/utilidades/Formulario\";\r\nimport Boton from \"../peliculas/utilidades/Boton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Mapa from \"../peliculas/utilidades/Mapa\";\r\nimport FormularioMapa from \"../peliculas/utilidades/FormularioMapa\";\r\nimport { coordenadaDTO } from \"../peliculas/utilidades/coordenada.model\";\r\n\r\nexport default function FormularioCine(props: formularioCineProps) {\r\n\r\n    function transformarCoordenadas(): coordenadaDTO[] | undefined { //esto lo que hace es que si hay coordenadas dispobibles me las mostrara en el mapa, sino sera undefined\r\n    if(props.modelo.latitud && props.modelo.longitud){\r\n     const respuesta: coordenadaDTO = {latitud: props.modelo.latitud, longitud: props.modelo.longitud}\r\n     return[respuesta]\r\n    }\r\n    return undefined;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik initialValues={props.modelo} onSubmit={props.onSubmit}\r\n                validationSchema={yup.object({\r\n                    nombre: yup.string().required(\"Este campo es requerido\").PrimeraLetraMayuscula()\r\n                })} >\r\n\r\n                {(formikProps) => (\r\n                    <Form>\r\n                        <Formulario label=\"Nombre\" campo=\"nombre\" />\r\n\r\n                        <div style = {{marginBottom: \"1rem\"}}>\r\n                             <FormularioMapa campoLatitud = \"latitud\" campoLongitud=\"longitud\" coordenadas = {transformarCoordenadas()} /> \r\n                        </div> \r\n\r\n                        <Boton disabled={formikProps.isSubmitting} type=\"submit\">Guardar</Boton>\r\n                        <Link className=\"btn btn-secondary\" to=\"/cines\">Cancelar</Link>\r\n                    </Form>\r\n                )}\r\n\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface formularioCineProps {\r\n    modelo: creacionCinesDTO;\r\n    onSubmit(valores: creacionCinesDTO, acciones: FormikHelpers<creacionCinesDTO>): void\r\n}"]},"metadata":{},"sourceType":"module"}