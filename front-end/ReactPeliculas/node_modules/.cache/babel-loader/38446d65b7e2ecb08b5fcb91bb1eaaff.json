{"ast":null,"code":"var _jsxFileName = \"F:\\\\Pelis-RD\\\\front-end\\\\ReactPeliculas\\\\src\\\\peliculas\\\\ListadoGenerico.tsx\";\nimport Cargando from \"./utilidades/Cargando\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListadoGenerico(props) {\n  if (!props.listado) {\n    if (props.cargandoUI) {\n      return props.cargandoUI;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Cargando, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 15\n    }, this);\n  } else if (props.listado.length === 0) {\n    if (props.listadoVacioUI) {\n      return props.listadoVacioUI;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No hay elementos para mostrar\"\n    }, void 0, false);\n  } else {\n    return props.children;\n  }\n}\n_c = ListadoGenerico;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListadoGenerico\");","map":{"version":3,"sources":["F:/Pelis-RD/front-end/ReactPeliculas/src/peliculas/ListadoGenerico.tsx"],"names":["Cargando","ListadoGenerico","props","listado","cargandoUI","length","listadoVacioUI","children"],"mappings":";AACA,OAAOA,QAAP,MAAqB,uBAArB;;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAoD;AAC/D,MAAG,CAACA,KAAK,CAACC,OAAV,EAAkB;AACf,QAAGD,KAAK,CAACE,UAAT,EAAoB;AAChB,aAAOF,KAAK,CAACE,UAAb;AACH;;AACD,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACF,GALD,MAKO,IAAIF,KAAK,CAACC,OAAN,CAAcE,MAAd,KAAyB,CAA7B,EAA+B;AAClC,QAAGH,KAAK,CAACI,cAAT,EAAwB;AACpB,aAAOJ,KAAK,CAACI,cAAb;AACH;;AACD,wBAAO;AAAA;AAAA,qBAAP;AACH,GALM,MAKD;AACF,WAAOJ,KAAK,CAACK,QAAb;AACH;AAEA;KAfmBN,e","sourcesContent":["import { ReactElement } from \"react\";\r\nimport Cargando from \"./utilidades/Cargando\";\r\n\r\nexport default function ListadoGenerico(props:ListadoGenericoProps){\r\n    if(!props.listado){\r\n       if(props.cargandoUI){\r\n           return props.cargandoUI;\r\n       }\r\n       return <Cargando/>\r\n    } else if (props.listado.length === 0){\r\n        if(props.listadoVacioUI){\r\n            return props.listadoVacioUI;\r\n        }\r\n        return <>No hay elementos para mostrar</>\r\n    } else{\r\n        return props.children;\r\n    }\r\n\r\n    }\r\ninterface ListadoGenericoProps{\r\n    listado: any; //recibe un listado de lo que sea\r\n    children: ReactElement; //esto recibe lo que queremos mostrar si hay elementos\r\n    cargandoUI?: ReactElement; //esto recibe el loading\r\n    listadoVacioUI?: ReactElement; // esto lo mostraremos si no hay nada en el listado\r\n\r\n}"]},"metadata":{},"sourceType":"module"}