{"ast":null,"code":"import _toConsumableArray from \"F:/Pelis-RD/front-end/ReactPeliculas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"F:/Pelis-RD/front-end/ReactPeliculas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"F:\\\\Pelis-RD\\\\front-end\\\\ReactPeliculas\\\\src\\\\peliculas\\\\FormularioPeliculas.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Formulario from \"./utilidades/Formulario\";\nimport FormularioCheckbox from \"./utilidades/FormularioCheckbox\";\nimport FormularioFecha from \"./utilidades/FormularioFecha\";\nimport FormularioImagen from \"./utilidades/FormularioImagen\";\nimport Boton from \"./utilidades/Boton\";\nimport { Link } from \"react-router-dom\";\nimport SelectorMultiple from \"./utilidades/SelectorMultiple\";\nimport { useState } from \"react\";\nimport TypeAheadActores from \"../actores/TypeAheadActores\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//esto lo hacemos para trabajar con los datos en memoria\nexport default function FormularioPeliculas(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(maping(props.generosSeleccionados)),\n      _useState2 = _slicedToArray(_useState, 2),\n      generosSeleccionados = _useState2[0],\n      setGenerosSeleccionados = _useState2[1];\n\n  var _useState3 = useState(maping(props.generosNoSeleccionados)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      generosNoSeleccionados = _useState4[0],\n      setGenerosNoSeleccionados = _useState4[1];\n\n  var _useState5 = useState(maping(props.cinesSeleccionados)),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cinesSeleccionados = _useState6[0],\n      setCinesSeleccionados = _useState6[1];\n\n  var _useState7 = useState(maping(props.cinesNoSeleccionados)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cinesNoSeleccionados = _useState8[0],\n      setCinesNoSeleccionados = _useState8[1];\n\n  var _useState9 = useState(props.actoresElegidos),\n      _useState10 = _slicedToArray(_useState9, 2),\n      actoresSeleccionados = _useState10[0],\n      setActoresSeleccionados = _useState10[1];\n\n  function maping(array) {\n    return array.map(function (e) {\n      return {\n        llave: e.id,\n        valor: e.nombre\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.modelo,\n      onSubmit: function onSubmit(valores, acciones) {\n        valores.generosIds = generosSeleccionados.map(function (e) {\n          return e.llave;\n        });\n        props.onSubmit(valores, acciones);\n        valores.cinesIds = cinesSeleccionados.map(function (x) {\n          return x.llave;\n        });\n        valores.actores = actoresSeleccionados;\n      },\n      validationSchema: yup.object({\n        titulo: yup.string().required(\"Este campo es requerido\").PrimeraLetraMayuscula()\n      }),\n      children: function children(formikProps) {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Formulario, {\n            label: \"T\\xEDtulo\",\n            campo: \"titulo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(FormularioCheckbox, {\n            label: \"En cines\",\n            campo: \"enCines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Formulario, {\n            label: \"Trailer\",\n            campo: \"trailer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(FormularioFecha, {\n            campo: \"fechaLanzamiento\",\n            label: \"Fecha Lanzamiento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(FormularioImagen, {\n            campo: \"poster\",\n            label: \"Poster\",\n            imagenURL: props.modelo.posterURL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"G\\xE9neros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(SelectorMultiple, {\n              seleccionados: generosSeleccionados,\n              noSeleccionados: generosNoSeleccionados,\n              onChange: function onChange(seleccionados, noSeleccionados) {\n                setGenerosSeleccionados(seleccionados);\n                setGenerosNoSeleccionados(noSeleccionados);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Cines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(SelectorMultiple, {\n              seleccionados: cinesSeleccionados,\n              noSeleccionados: cinesNoSeleccionados,\n              onChange: function onChange(seleccionados, noSeleccionados) {\n                setCinesSeleccionados(seleccionados);\n                setCinesNoSeleccionados(noSeleccionados);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(TypeAheadActores, {\n              onAdd: function onAdd(actores) {\n                setActoresSeleccionados(actores);\n              },\n              onRemove: function onRemove(actorRemovido) {\n                var actores = actoresSeleccionados.filter(function (x) {\n                  return x !== actorRemovido;\n                });\n                setActoresSeleccionados(actores);\n              },\n              actores: actoresSeleccionados,\n              listadoUI: function listadoUI(actor) {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [actor.nombre, \" / \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Personaje\",\n                    value: actor.personaje,\n                    onChange: function onChange(e) {\n                      var indice = actoresSeleccionados.findIndex(function (x) {\n                        return x.id === actor.id;\n                      });\n\n                      var actores = _toConsumableArray(actoresSeleccionados);\n\n                      actores[indice].personaje = e.currentTarget.value;\n                      setActoresSeleccionados(actores);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 54\n                  }, _this)]\n                }, void 0, true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Boton, {\n            disabled: formikProps.isSubmitting,\n            type: \"submit\",\n            children: \"Guardar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"btn btn-secondary\",\n            to: \"/\",\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormularioPeliculas, \"z2vrWE1pyQ0CAh4U4M4MhzQMiJk=\");\n\n_c = FormularioPeliculas;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioPeliculas\");","map":{"version":3,"sources":["F:/Pelis-RD/front-end/ReactPeliculas/src/peliculas/FormularioPeliculas.tsx"],"names":["Form","Formik","yup","Formulario","FormularioCheckbox","FormularioFecha","FormularioImagen","Boton","Link","SelectorMultiple","useState","TypeAheadActores","FormularioPeliculas","props","maping","generosSeleccionados","setGenerosSeleccionados","generosNoSeleccionados","setGenerosNoSeleccionados","cinesSeleccionados","setCinesSeleccionados","cinesNoSeleccionados","setCinesNoSeleccionados","actoresElegidos","actoresSeleccionados","setActoresSeleccionados","array","map","e","llave","id","valor","nombre","modelo","valores","acciones","generosIds","onSubmit","cinesIds","x","actores","object","titulo","string","required","PrimeraLetraMayuscula","formikProps","posterURL","seleccionados","noSeleccionados","actorRemovido","filter","actor","personaje","indice","findIndex","currentTarget","value","isSubmitting"],"mappings":"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","sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { creacionPeliculasDTO } from \"./Peliculas.model\";\r\nimport * as yup from \"yup\"\r\nimport Formulario from \"./utilidades/Formulario\";\r\nimport FormularioCheckbox from \"./utilidades/FormularioCheckbox\";\r\nimport FormularioFecha from \"./utilidades/FormularioFecha\";\r\nimport FormularioImagen from \"./utilidades/FormularioImagen\";\r\nimport Boton from \"./utilidades/Boton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SelectorMultiple, { selectorMultipleModel } from \"./utilidades/SelectorMultiple\";\r\nimport { listadogenerosDTO } from \"../generos/generos.model\";\r\nimport { useState } from \"react\";\r\nimport { cineDTO } from \"../cines/cine.model\";\r\nimport TypeAheadActores from \"../actores/TypeAheadActores\";\r\nimport { actorPeliculaDTO } from \"../actores/actores.model\";\r\n\r\n//esto lo hacemos para trabajar con los datos en memoria\r\nexport default function FormularioPeliculas(props: formularioPeliculasProps) {\r\n    const [generosSeleccionados, setGenerosSeleccionados] = useState(maping(props.generosSeleccionados))\r\n    const [generosNoSeleccionados, setGenerosNoSeleccionados] = useState(maping(props.generosNoSeleccionados))\r\n\r\n    const [cinesSeleccionados, setCinesSeleccionados] = useState(maping(props.cinesSeleccionados));\r\n    const [cinesNoSeleccionados, setCinesNoSeleccionados] = useState(maping(props.cinesNoSeleccionados));\r\n\r\n    const [actoresSeleccionados, setActoresSeleccionados] = useState<actorPeliculaDTO[]>(props.actoresElegidos)\r\n\r\n    function maping(array: { id: number, nombre: string }[]): selectorMultipleModel[] {\r\n        return array.map(e => {\r\n            return { llave: e.id, valor: e.nombre }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik initialValues={props.modelo}\r\n                onSubmit={(valores, acciones) => {\r\n                    valores.generosIds = generosSeleccionados.map(e => e.llave);\r\n                    props.onSubmit(valores, acciones)\r\n                    valores.cinesIds = cinesSeleccionados.map(x => x.llave);\r\n                    valores.actores = actoresSeleccionados;\r\n                }}\r\n\r\n                validationSchema={yup.object(\r\n                    { titulo: yup.string().required(\"Este campo es requerido\").PrimeraLetraMayuscula() }\r\n                )}\r\n            >\r\n                {formikProps => (\r\n\r\n                    <Form>\r\n                        <Formulario label=\"Título\" campo=\"titulo\" />\r\n                        <FormularioCheckbox label=\"En cines\" campo=\"enCines\" />\r\n                        <Formulario label=\"Trailer\" campo=\"trailer\" />\r\n                        <FormularioFecha campo=\"fechaLanzamiento\" label=\"Fecha Lanzamiento\" />\r\n                        <FormularioImagen campo=\"poster\" label=\"Poster\" imagenURL={props.modelo.posterURL} />\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Géneros</label>\r\n                            <SelectorMultiple seleccionados={generosSeleccionados} noSeleccionados={generosNoSeleccionados}\r\n                                onChange={(seleccionados, noSeleccionados) => {\r\n                                    setGenerosSeleccionados(seleccionados);\r\n                                    setGenerosNoSeleccionados(noSeleccionados);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Cines</label>\r\n                            <SelectorMultiple seleccionados={cinesSeleccionados} noSeleccionados={cinesNoSeleccionados}\r\n                                onChange={(seleccionados, noSeleccionados) => {\r\n                                    setCinesSeleccionados(seleccionados);\r\n                                    setCinesNoSeleccionados(noSeleccionados);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <TypeAheadActores\r\n\r\n                                onAdd={actores => {\r\n                                    setActoresSeleccionados(actores);\r\n\r\n                                }}\r\n                                onRemove={actorRemovido => {\r\n                                    const actores = actoresSeleccionados.filter(x => x !== actorRemovido);\r\n                                    setActoresSeleccionados(actores);\r\n                                }}\r\n                                actores={actoresSeleccionados}\r\n                                listadoUI={(actor: actorPeliculaDTO) => <>\r\n                                    {actor.nombre} / <input type=\"text\" placeholder=\"Personaje\"\r\n                                        value={actor.personaje}\r\n                                        onChange={e => {\r\n                                            const indice = actoresSeleccionados.findIndex(x => x.id === actor.id);\r\n\r\n                                            const actores = [...actoresSeleccionados];\r\n                                            actores[indice].personaje = e.currentTarget.value;\r\n                                            setActoresSeleccionados(actores);\r\n                                        }}\r\n                                    />\r\n                                </>}\r\n                            />\r\n                        </div>\r\n\r\n                        <Boton disabled={formikProps.isSubmitting} type=\"submit\">Guardar</Boton>\r\n                        <Link className=\"btn btn-secondary\" to=\"/\">Cancelar</Link>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface formularioPeliculasProps {\r\n    modelo: creacionPeliculasDTO;\r\n    onSubmit(valores: creacionPeliculasDTO, acciones: FormikHelpers<creacionPeliculasDTO>): void;\r\n    generosSeleccionados: listadogenerosDTO[]; //estos son datos temporales\r\n    generosNoSeleccionados: listadogenerosDTO[]; // estos son datos temporales\r\n    cinesSeleccionados: cineDTO[];\r\n    cinesNoSeleccionados: cineDTO[];\r\n    actoresElegidos: actorPeliculaDTO[];\r\n}"]},"metadata":{},"sourceType":"module"}