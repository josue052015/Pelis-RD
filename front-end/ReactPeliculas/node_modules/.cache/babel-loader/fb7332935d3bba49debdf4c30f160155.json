{"ast":null,"code":"import _toConsumableArray from \"F:/Pelis-RD/front-end/ReactPeliculas/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"F:\\\\Pelis-RD\\\\front-end\\\\ReactPeliculas\\\\src\\\\peliculas\\\\utilidades\\\\SelectorMultiple.tsx\";\nimport \"./SelectorMultiple.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SelectorMultiple(props) {\n  var _this = this;\n\n  function seleccionar(item) {\n    var seleccionados = [].concat(_toConsumableArray(props.seleccionados), [item]); // aqui estamos utilizando la lista de elementos que ya tenemos seleccionados y añadiendo el proximo\n\n    var noSeleccionados = props.noSeleccionados.filter(function (e) {\n      return e !== item;\n    });\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  function deseleccionar(item) {\n    var seleccionados = props.seleccionados.filter(function (e) {\n      return e !== item;\n    });\n    var noSeleccionados = [].concat(_toConsumableArray(props.noSeleccionados), [item]);\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  function SelectAll() {\n    var seleccionados = [].concat(_toConsumableArray(props.seleccionados), _toConsumableArray(props.noSeleccionados));\n    var noSeleccionados = []; //le pusimos esto para ser especifico con el tipo de dato de este, ya que ahora es como un any\n\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  function Cancel() {\n    var noSeleccionados = [].concat(_toConsumableArray(props.noSeleccionados), _toConsumableArray(props.seleccionados));\n    var seleccionados = [];\n    props.onChange(seleccionados, noSeleccionados);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector-multiple\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.noSeleccionados.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: function onClick() {\n              return seleccionar(item);\n            },\n            children: [\" \", item.valor, \" \"]\n          }, item.llave, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selector-multiple-botones\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: SelectAll,\n          children: [\" \", \"Select All\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: Cancel,\n          children: [\" \", \"Cancel\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.seleccionados.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: function onClick() {\n              return deseleccionar(item);\n            },\n            children: [\" \", item.valor, \" \"]\n          }, item.llave, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = SelectorMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectorMultiple\");","map":{"version":3,"sources":["F:/Pelis-RD/front-end/ReactPeliculas/src/peliculas/utilidades/SelectorMultiple.tsx"],"names":["SelectorMultiple","props","seleccionar","item","seleccionados","noSeleccionados","filter","e","onChange","deseleccionar","SelectAll","Cancel","map","valor","llave"],"mappings":";;AAAA,OAAO,wBAAP;;;AAEA,eAAe,SAASA,gBAAT,CAA0BC,KAA1B,EAAwD;AAAA;;AACnE,WAASC,WAAT,CAAqBC,IAArB,EAAkD;AAC9C,QAAMC,aAAa,gCAAOH,KAAK,CAACG,aAAb,IAA4BD,IAA5B,EAAnB,CAD8C,CACQ;;AACtD,QAAME,eAAe,GAAGJ,KAAK,CAACI,eAAN,CAAsBC,MAAtB,CAA6B,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKJ,IAAV;AAAA,KAA9B,CAAxB;AACAF,IAAAA,KAAK,CAACO,QAAN,CAAeJ,aAAf,EAA8BC,eAA9B;AACH;;AAED,WAASI,aAAT,CAAuBN,IAAvB,EAAoD;AAChD,QAAMC,aAAa,GAAGH,KAAK,CAACG,aAAN,CAAoBE,MAApB,CAA2B,UAAAC,CAAC;AAAA,aAAIA,CAAC,KAAKJ,IAAV;AAAA,KAA5B,CAAtB;AACA,QAAME,eAAe,gCAAOJ,KAAK,CAACI,eAAb,IAA8BF,IAA9B,EAArB;AACAF,IAAAA,KAAK,CAACO,QAAN,CAAeJ,aAAf,EAA8BC,eAA9B;AACH;;AACD,WAASK,SAAT,GAAqB;AACjB,QAAMN,aAAa,gCAAOH,KAAK,CAACG,aAAb,sBAA+BH,KAAK,CAACI,eAArC,EAAnB;AACA,QAAMA,eAAwC,GAAG,EAAjD,CAFiB,CAEoC;;AACrDJ,IAAAA,KAAK,CAACO,QAAN,CAAeJ,aAAf,EAA8BC,eAA9B;AACH;;AAED,WAASM,MAAT,GAAiB;AACb,QAAMN,eAAe,gCAAOJ,KAAK,CAACI,eAAb,sBAAgCJ,KAAK,CAACG,aAAtC,EAArB;AACA,QAAMA,aAAsC,GAAG,EAA/C;AACAH,IAAAA,KAAK,CAACO,QAAN,CAAgBJ,aAAhB,EAA8BC,eAA9B;AACH;;AACD,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA,kBACKJ,KAAK,CAACI,eAAN,CAAsBO,GAAtB,CAA0B,UAAAT,IAAI;AAAA,8BAC3B;AAAqB,YAAA,OAAO,EAAE;AAAA,qBAAMD,WAAW,CAACC,IAAD,CAAjB;AAAA,aAA9B;AAAA,4BAA0DA,IAAI,CAACU,KAA/D;AAAA,aAASV,IAAI,CAACW,KAAd;AAAA;AAAA;AAAA;AAAA,mBAD2B;AAAA,SAA9B;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEJ,SAA/B;AAAA,0BAA4C,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEC,MAA/B;AAAA,0BAAyC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAA,kBACKV,KAAK,CAACG,aAAN,CAAoBQ,GAApB,CAAwB,UAAAT,IAAI;AAAA,8BACzB;AAAqB,YAAA,OAAO,EAAE;AAAA,qBAAMM,aAAa,CAACN,IAAD,CAAnB;AAAA,aAA9B;AAAA,4BAA4DA,IAAI,CAACU,KAAjE;AAAA,aAASV,IAAI,CAACW,KAAd;AAAA;AAAA;AAAA;AAAA,mBADyB;AAAA,SAA5B;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH;KA3CuBd,gB","sourcesContent":["import \"./SelectorMultiple.css\"\r\n\r\nexport default function SelectorMultiple(props: selectorMultipleProps) {\r\n    function seleccionar(item: selectorMultipleModel) {\r\n        const seleccionados = [...props.seleccionados, item]; // aqui estamos utilizando la lista de elementos que ya tenemos seleccionados y añadiendo el proximo\r\n        const noSeleccionados = props.noSeleccionados.filter(e => e !== item);\r\n        props.onChange(seleccionados, noSeleccionados);\r\n    }\r\n\r\n    function deseleccionar(item: selectorMultipleModel) {\r\n        const seleccionados = props.seleccionados.filter(e => e !== item);\r\n        const noSeleccionados = [...props.noSeleccionados, item];\r\n        props.onChange(seleccionados, noSeleccionados);\r\n    }\r\n    function SelectAll() {\r\n        const seleccionados = [...props.seleccionados, ...props.noSeleccionados];\r\n        const noSeleccionados: selectorMultipleModel[] = []; //le pusimos esto para ser especifico con el tipo de dato de este, ya que ahora es como un any\r\n        props.onChange(seleccionados, noSeleccionados);\r\n    }\r\n\r\n    function Cancel(){\r\n        const noSeleccionados = [...props.noSeleccionados,...props.seleccionados];\r\n        const seleccionados: selectorMultipleModel[] = [];\r\n        props.onChange (seleccionados,noSeleccionados);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"selector-multiple\">\r\n                <ul>\r\n                    {props.noSeleccionados.map(item =>\r\n                        <li key={item.llave} onClick={() => seleccionar(item)} > {item.valor} </li>\r\n                    )}\r\n                </ul>\r\n                <div className=\"selector-multiple-botones\">\r\n                    <button type=\"button\" onClick={SelectAll}> {\"Select All\"} </button>\r\n                    <button type=\"button\" onClick={Cancel}> {\"Cancel\"} </button>\r\n                </div>\r\n                <ul>\r\n                    {props.seleccionados.map(item =>\r\n                        <li key={item.llave} onClick={() => deseleccionar(item)} > {item.valor} </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface selectorMultipleProps {\r\n    seleccionados: selectorMultipleModel[];\r\n    noSeleccionados: selectorMultipleModel[];\r\n    onChange(seleccionados: selectorMultipleModel[], noSeleccionados: selectorMultipleModel[]): void\r\n}\r\n\r\nexport interface selectorMultipleModel {\r\n    llave: number;\r\n    valor: string;\r\n}"]},"metadata":{},"sourceType":"module"}