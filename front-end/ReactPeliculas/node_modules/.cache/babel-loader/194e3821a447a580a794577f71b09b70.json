{"ast":null,"code":"var _jsxFileName = \"F:\\\\Pelis-RD\\\\front-end\\\\ReactPeliculas\\\\src\\\\peliculas\\\\utilidades\\\\FormularioFecha.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormikContext } from \"formik\";\nimport MensajeError from \"./MensajeError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormularioFecha(props) {\n  _s();\n\n  var _values$props$campo, _errors$props$campo;\n\n  var _useFormikContext = useFormikContext(),\n      values = _useFormikContext.values,\n      validateForm = _useFormikContext.validateForm,\n      touched = _useFormikContext.touched,\n      errors = _useFormikContext.errors; //formik nos permite utilizar el contexto de cualquier otro componente formik\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.campo,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      className: \"form-control\",\n      id: props.campo,\n      name: props.campo,\n      defaultValue: (_values$props$campo = values[props.campo]) === null || _values$props$campo === void 0 ? void 0 : _values$props$campo.toLocaleDateString(\"en-CA\"),\n      onChange: function onChange(e) {\n        var fecha = new Date(e.currentTarget.value + \"T00:00:00\");\n        values[props.campo] = fecha;\n        validateForm(); //esto es para validar el formulario\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), touched[props.campo] && errors[props.campo] ? /*#__PURE__*/_jsxDEV(MensajeError, {\n      mensaje: (_errors$props$campo = errors[props.campo]) === null || _errors$props$campo === void 0 ? void 0 : _errors$props$campo.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 60\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormularioFecha, \"qY0THuA31tj6kZcHzz6bWpBYuJI=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = FormularioFecha;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioFecha\");","map":{"version":3,"sources":["F:/Pelis-RD/front-end/ReactPeliculas/src/peliculas/utilidades/FormularioFecha.tsx"],"names":["useFormikContext","MensajeError","FormularioFecha","props","values","validateForm","touched","errors","campo","label","toLocaleDateString","e","fecha","Date","currentTarget","value","toString"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,QAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAsD;AAAA;;AAAA;;AACjE,0BAAkDH,gBAAgB,EAAlE;AAAA,MAAQI,MAAR,qBAAQA,MAAR;AAAA,MAAgBC,YAAhB,qBAAgBA,YAAhB;AAAA,MAA8BC,OAA9B,qBAA8BA,OAA9B;AAAA,MAAuCC,MAAvC,qBAAuCA,MAAvC,CADiE,CACU;;;AAC3E,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BAEI;AAAO,MAAA,OAAO,EAAEJ,KAAK,CAACK,KAAtB;AAAA,gBAA8BL,KAAK,CAACM;AAApC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,EAAE,EAAEN,KAAK,CAACK,KAAtD;AAA6D,MAAA,IAAI,EAAEL,KAAK,CAACK,KAAzE;AACI,MAAA,YAAY,yBAAEJ,MAAM,CAACD,KAAK,CAACK,KAAP,CAAR,wDAAE,oBAAqBE,kBAArB,CAAwC,OAAxC,CADlB;AAEI,MAAA,QAAQ,EAAE,kBAAAC,CAAC,EAAI;AACX,YAAMC,KAAK,GAAG,IAAIC,IAAJ,CAASF,CAAC,CAACG,aAAF,CAAgBC,KAAhB,GAAwB,WAAjC,CAAd;AACAX,QAAAA,MAAM,CAACD,KAAK,CAACK,KAAP,CAAN,GAAsBI,KAAtB;AACAP,QAAAA,YAAY,GAHD,CAGK;AACnB;AANL;AAAA;AAAA;AAAA;AAAA,YAJJ,EAeKC,OAAO,CAACH,KAAK,CAACK,KAAP,CAAP,IAAwBD,MAAM,CAACJ,KAAK,CAACK,KAAP,CAA9B,gBAA8C,QAAC,YAAD;AAAc,MAAA,OAAO,yBAAED,MAAM,CAACJ,KAAK,CAACK,KAAP,CAAR,wDAAE,oBAAqBQ,QAArB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAA9C,GAA4G,IAfjH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAtBuBd,e;UAC8BF,gB;;;KAD9BE,e","sourcesContent":["import { useFormikContext } from \"formik\"\r\nimport MensajeError from \"./MensajeError\";\r\n\r\nexport default function FormularioFecha(props: formularioFechaProps) {\r\n    const { values, validateForm, touched, errors } = useFormikContext<any>(); //formik nos permite utilizar el contexto de cualquier otro componente formik\r\n    return (\r\n        <div className=\"form-group\">\r\n\r\n            <label htmlFor={props.campo}>{props.label}</label>\r\n\r\n            <input type=\"date\" className=\"form-control\" id={props.campo} name={props.campo}\r\n                defaultValue={values[props.campo]?.toLocaleDateString(\"en-CA\")}\r\n                onChange={e => {\r\n                    const fecha = new Date(e.currentTarget.value + \"T00:00:00\");\r\n                    values[props.campo] = fecha;\r\n                    validateForm(); //esto es para validar el formulario\r\n                }}\r\n            />\r\n            {/*(nota: usamos el ! para indicarle que va a ser siempre un string no un undefined porque en el formulario de crear le estamos pasando un undefined) \r\n            Esto basicamente lo que pregunta es que si el campo fue tocado o si se presento algun error en el campo en caso positivo tirara la alerta de lo contrario sera nulo, porque no paso nada */}\r\n\r\n            {touched[props.campo] && errors[props.campo] ? <MensajeError mensaje={errors[props.campo]?.toString()!} /> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface formularioFechaProps {\r\n    campo: string;\r\n    label: string;\r\n}"]},"metadata":{},"sourceType":"module"}